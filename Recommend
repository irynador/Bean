import java.lang.reflect.Method;

import org.aopalliance.intercept.MethodInterceptor;
import org.aopalliance.intercept.MethodInvocation;
import org.springframework.aop.AfterReturningAdvice;
import org.springframework.aop.MethodBeforeAdvice;
import org.springframework.aop.ThrowsAdvice;

public class Recommend implements MethodBeforeAdvice, AfterReturningAdvice, MethodInterceptor, ThrowsAdvice {

    @Override
    public void before(Method method, Object[] os, Object o) throws Throwable {

        System.out.println("Before the method");

    }

    @Override
    public void afterReturning(Object returnValue, Method method, Object[] args, Object target) throws Throwable {
        System.out.println("After the method");

    }

    @Override
    public Object invoke(MethodInvocation mi) throws Throwable {
        //before
        System.out.println("Before");
        Object res = null;
        try {
            res = mi.proceed();
        //after
            System.out.println("After");
        } catch (Exception e) {
            System.out.println("Exception");
        }
        return res;
    }


    public void afterThrowing(Exception e){

        System.out.println("Exception was thrown!");

    }
}
